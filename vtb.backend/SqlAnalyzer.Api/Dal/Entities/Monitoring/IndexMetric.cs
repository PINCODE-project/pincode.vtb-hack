using SqlAnalyzer.Api.Dal.Entities.Base;

/// <summary>
/// Метрики эффективности индексов PostgreSQL
/// Содержит статистику использования и производительности индексов для оптимизации запросов
/// </summary>
public class IndexMetric : EntityBase, IEntityCreatedAt
{
    /// <summary>
    /// Имя схемы базы данных
    /// Схема содержит namespace для организации таблиц и индексов
    /// </summary>
    public string SchemaName { get; set; }
    
    /// <summary>
    /// Имя таблицы, к которой относится индекс
    /// Таблица является целевым объектом для индексирования
    /// </summary>
    public string TableName { get; set; }
    
    /// <summary>
    /// Имя индекса в базе данных
    /// Уникальный идентификатор индекса в пределах схемы
    /// </summary>
    public string IndexName { get; set; }
    
    /// <summary>
    /// Количество сканирований индекса
    /// Показывает, сколько раз индекс был использован для выполнения запросов
    /// Низкое значение может указывать на неиспользуемый индекс
    /// </summary>
    public long IndexScans { get; set; }
    
    /// <summary>
    /// Размер индекса в байтах
    /// Включает все страницы индекса, занимаемые на диске
    /// Большие индексы требуют больше ресурсов для обслуживания
    /// </summary>
    public long IndexSize { get; set; }
    
    /// <summary>
    /// Количество tuple'ов (строк), прочитанных из индекса
    /// Показывает объем данных, обработанных через индекс
    /// </summary>
    public long TuplesRead { get; set; }
    
    /// <summary>
    /// Количество tuple'ов (строк), фактически возвращенных индексом
    /// Может отличаться от TuplesRead из-за фильтрации и условий
    /// </summary>
    public long TuplesFetched { get; set; }
    
    /// <summary>
    /// Эффективность индекса (коэффициент селективности)
    /// Рассчитывается как: TuplesFetched / TuplesRead * 100%
    /// Высокие значения (>80%) указывают на хорошую селективность
    /// Низкие значения (<20%) могут указывать на неэффективный индекс
    /// </summary>
    public double Efficiency { get; set; }
    
    /// <summary>
    /// Дата и время сбора метрик индекса
    /// Позволяет отслеживать изменения в использовании индексов во времени
    /// </summary>
    public DateTime CreateAt { get; set; }
    
    /// <summary>
    /// Идентификатор подключения к базе данных
    /// Связывает метрики с конкретным экземпляром БД в системе мониторинга
    /// </summary>
    public Guid DbConnectionId { get; set; }
}
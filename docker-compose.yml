version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: vtb_hack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5444:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d vtb_hack"]
      interval: 5s
      timeout: 5s
      retries: 10

  sql-analyzer:
    build:
      context: ./vtb.backend/SqlAnalyzer.Api
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: Host=postgres;Port=5444;Database=vtb_hack;Username=postgres;Password=postgres;Pooling=false;Timeout=3
      DB_DSN: ${DB_DSN}
      ASPNETCORE_ENVIRONMENT: Production
      LLM_BASE_URL: http://5.39.220.103:5009
    ports:
      - "5023:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

  load-api:
    build:
      context: ./load-api
      dockerfile: Dockerfile
    environment:
      DB_DSN: ${DB_DSN}
      SCRIPTS_DIR: /app/sql
    volumes:
      - ./load-api/sql:/app/sql:ro
    ports:
      - "5024:8000"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:

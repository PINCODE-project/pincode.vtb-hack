{
  "openapi": "3.0.4",
  "info": {
    "title": "Postgresql analyzer API",
    "description": "Сервис для анализа метрик бд и sql запросов",
    "version": "v1"
  },
  "paths": {
    "/api/autovacuum/analysis": {
      "get": {
        "tags": [
          "AutovacuumAnalysis"
        ],
        "summary": "Полный анализ состояния autovacuum",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AutovacuumAnalysisResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutovacuumAnalysisResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutovacuumAnalysisResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/autovacuum/metrics": {
      "get": {
        "tags": [
          "AutovacuumAnalysis"
        ],
        "summary": "Получение метрик для отображения графиков по периоду",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "schemaName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutovacuumStat"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutovacuumStat"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AutovacuumStat"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/autovacuum/all-schema-and-table-name": {
      "get": {
        "tags": [
          "AutovacuumAnalysis"
        ],
        "summary": "Получение всех уникальных комбинаций схема-таблица",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchemaTableDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchemaTableDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchemaTableDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/autovacuum/time": {
      "get": {
        "tags": [
          "AutovacuumAnalysis"
        ],
        "summary": "Получение уникального времени в записях",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/autovacuum/collect": {
      "post": {
        "tags": [
          "AutovacuumAnalysis"
        ],
        "summary": "Принудительно собрать метрики",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/cache/analysis": {
      "get": {
        "tags": [
          "CacheAnalysis"
        ],
        "summary": "Анализ изменения состояния кеша за последний час",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CacheAnalysisResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CacheAnalysisResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CacheAnalysisResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/metrics": {
      "get": {
        "tags": [
          "CacheAnalysis"
        ],
        "summary": "Получение метрик для отображения графиков по периоду",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CacheHitStats"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CacheHitStats"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CacheHitStats"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/time": {
      "get": {
        "tags": [
          "CacheAnalysis"
        ],
        "summary": "Получение уникального времени в записях",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/collect": {
      "post": {
        "tags": [
          "CacheAnalysis"
        ],
        "summary": "Принудительно собрать метрики",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/db-connections/find": {
      "get": {
        "tags": [
          "DbConnection"
        ],
        "summary": "Ищет все коннекшены",
        "parameters": [
          {
            "name": "Search",
            "in": "query",
            "description": "Строка запроса - ищет по названию, хосту, порту, названию БД, юзернейму",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Skip",
            "in": "query",
            "description": "Сколько записей пропускаем",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Сколько записей берем",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DbConnectionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DbConnectionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DbConnectionDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/db-connections": {
      "post": {
        "tags": [
          "DbConnection"
        ],
        "summary": "Сохраняет подключение (без проверки).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuidSimpleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidSimpleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidSimpleDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "DbConnection"
        ],
        "summary": "Обновляет",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionUpdateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/db-connections/check": {
      "post": {
        "tags": [
          "DbConnection"
        ],
        "summary": "Проверяет доступность подключения.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DbConnectionCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/DbConnectionCheckDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbConnectionCheckDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/DbConnectionCheckDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/db-connections/{id}": {
      "delete": {
        "tags": [
          "DbConnection"
        ],
        "summary": "Удаляет",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/index/recommendations": {
      "get": {
        "tags": [
          "IndexAnalyze"
        ],
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/IndexAnalysisResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexAnalysisResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndexAnalysisResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/index/metrics": {
      "get": {
        "tags": [
          "IndexAnalyze"
        ],
        "summary": "Получение метрик для отображения графиков по периоду",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "schemaName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tableName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndexMetric"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndexMetric"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IndexMetric"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/index/all-schema-and-table-name": {
      "get": {
        "tags": [
          "IndexAnalyze"
        ],
        "summary": "Получение всех уникальных комбинаций схема-таблица",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchemaTableDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchemaTableDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SchemaTableDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/index/time": {
      "get": {
        "tags": [
          "IndexAnalyze"
        ],
        "summary": "Получение уникального времени в записях",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/index/collect": {
      "post": {
        "tags": [
          "IndexAnalyze"
        ],
        "summary": "Принудительно собрать метрики",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/lock/analysis": {
      "get": {
        "tags": [
          "PgLockAnalysis"
        ],
        "summary": "Полный анализ состояния autovacuum",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/LockAnalysisResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockAnalysisResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/LockAnalysisResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/lock/metrics": {
      "get": {
        "tags": [
          "PgLockAnalysis"
        ],
        "summary": "Получение метрик для отображения графиков по периоду",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PgLock"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PgLock"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PgLock"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lock/time": {
      "get": {
        "tags": [
          "PgLockAnalysis"
        ],
        "summary": "Получение уникального времени в записях",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/lock/collect": {
      "post": {
        "tags": [
          "PgLockAnalysis"
        ],
        "summary": "Принудительно собрать метрики",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/pg-state-analysis/top": {
      "get": {
        "tags": [
          "PgStateAnalysis"
        ],
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisReportAdvanced"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisReportAdvanced"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisReportAdvanced"
                }
              }
            }
          }
        }
      }
    },
    "/api/queries/find": {
      "get": {
        "tags": [
          "QueryAnalysis"
        ],
        "summary": "Поиск всех сохраненных запросов",
        "parameters": [
          {
            "name": "Skip",
            "in": "query",
            "description": "Сколько записей пропускаем",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Take",
            "in": "query",
            "description": "Сколько записей берем",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/queries/create": {
      "post": {
        "tags": [
          "QueryAnalysis"
        ],
        "summary": "Только создает запись запроса и его эксплейна, выводит созданный id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/QueryCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GuidSimpleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidSimpleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GuidSimpleDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/queries/{queryId}": {
      "get": {
        "tags": [
          "QueryAnalysis"
        ],
        "summary": "По Id запроса выдает его содержимое и результат EXPLAIN",
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/queries/{queryId}/analyze": {
      "post": {
        "tags": [
          "QueryAnalysis"
        ],
        "summary": "Анализирует запрос\n1 - системными правилами для sql и explain\n2 - по флагу useLlm может выдать проблемы и рекомендации от LLM а также сравнение двух запросов\n3 - по ruleIds может проверять запрос по кастомным правилам, если ruleIds не передали, будет проверять по всем правилам",
        "parameters": [
          {
            "name": "queryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "useLlm",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "ruleIds",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAnalysisResultDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAnalysisResultDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryAnalysisResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/sql-analyzer/find": {
      "get": {
        "tags": [
          "SqlAnalyzeRule"
        ],
        "summary": "Ищет все кастомные правила для аналища SQL",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "take",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SqlAnalyzeRuleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SqlAnalyzeRuleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SqlAnalyzeRuleDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sql-analyzer": {
      "post": {
        "tags": [
          "SqlAnalyzeRule"
        ],
        "summary": "Создает новое кастомное правило для анализа SQL",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SqlAnalyzeRuleCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SqlAnalyzeRuleCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SqlAnalyzeRuleCreateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "patch": {
        "tags": [
          "SqlAnalyzeRule"
        ],
        "summary": "Обновляет кастомное правило",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SqlAnalyzeRuleUpdateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SqlAnalyzeRuleUpdateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SqlAnalyzeRuleUpdateDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/sql-analyzer/{id}": {
      "delete": {
        "tags": [
          "SqlAnalyzeRule"
        ],
        "summary": "Удаляет кастомное правило",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/substitute-values-to-sql/substitute": {
      "post": {
        "tags": [
          "SubstituteValuesToSql"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubstituteValuesToSqlRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SubstituteValuesToSqlRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SubstituteValuesToSqlRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/temp-file/analysis": {
      "get": {
        "tags": [
          "TempFilesAnalyzeMonitoring"
        ],
        "summary": "Получить результаты анализа временных файлов за последний час",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/TempFilesRecommendationResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempFilesRecommendationResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/TempFilesRecommendationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/temp-file/metrics": {
      "get": {
        "tags": [
          "TempFilesAnalyzeMonitoring"
        ],
        "summary": "Получение метрик для отображения графиков по периоду",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TempFilesStatsDal"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TempFilesStatsDal"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TempFilesStatsDal"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/temp-file/time": {
      "get": {
        "tags": [
          "TempFilesAnalyzeMonitoring"
        ],
        "summary": "Получение уникального времени в записях",
        "parameters": [
          {
            "name": "dbConnectionId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/temp-file/collect": {
      "post": {
        "tags": [
          "TempFilesAnalyzeMonitoring"
        ],
        "summary": "Принудительно собрать метрики",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "text/json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string",
                "format": "uuid"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnalysisReportAdvanced": {
        "type": "object",
        "properties": {
          "generatedAtUtc": {
            "type": "string",
            "format": "date-time"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QueryStatAdvanced"
            },
            "nullable": true
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AutovacuumAnalysisResponse": {
        "type": "object",
        "properties": {
          "analysisPeriodStart": {
            "type": "string",
            "description": "Начало анализа",
            "format": "date-time"
          },
          "analysisPeriodEnd": {
            "type": "string",
            "description": "Завершение анализа",
            "format": "date-time"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AutovacuumRecommendation"
            },
            "description": "Рекомендации по улучшению вакуума",
            "nullable": true
          },
          "metricsSummary": {
            "$ref": "#/components/schemas/AutovacuumMetricsSummary"
          },
          "overallStatus": {
            "type": "string",
            "description": "Статус автовакуума в целом по всей базе",
            "nullable": true
          },
          "problematicTables": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProblematicTable"
            },
            "description": "Список проблемных таблиц",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Результаты анализа автовакуума"
      },
      "AutovacuumMetricsSummary": {
        "type": "object",
        "properties": {
          "totalTables": {
            "type": "integer",
            "description": "Общее количество таблиц в базе данных",
            "format": "int32"
          },
          "problematicTables": {
            "type": "integer",
            "description": "Количество таблиц, требующих внимания (dead tuple ratio > 10%)",
            "format": "int32"
          },
          "criticalTables": {
            "type": "integer",
            "description": "Количество таблиц в критическом состоянии (dead tuple ratio > 20%)",
            "format": "int32"
          },
          "avgDeadTupleRatio": {
            "type": "number",
            "description": "Средний процент мертвых строк по всем таблицам",
            "format": "double"
          },
          "maxDeadTupleRatio": {
            "type": "number",
            "description": "Максимальный процент мертвых строк среди всех таблиц",
            "format": "double"
          },
          "worstTable": {
            "type": "string",
            "description": "Наименование таблицы с наихудшим показателем мертвых строк",
            "nullable": true
          },
          "worstTableRatio": {
            "type": "number",
            "description": "Процент мертвых строк в таблице с наихудшим показателем",
            "format": "double"
          },
          "totalDeadTuples": {
            "type": "integer",
            "description": "Общее количество мертвых строк во всех таблицах",
            "format": "int64"
          },
          "totalLiveTuples": {
            "type": "integer",
            "description": "Общее количество живых строк во всех таблицах",
            "format": "int64"
          },
          "systemWideDeadTupleRatio": {
            "type": "number",
            "description": "Общий процент мертвых строк (dead tuples) во всех базах данных кластера\nРассчитывается как: (TotalDeadTuples / TotalLiveTuples) * 100",
            "format": "double",
            "readOnly": true
          },
          "tablesAbove10Percent": {
            "type": "integer",
            "description": "Количество таблиц с процентом мертвых строк более 10%",
            "format": "int32"
          },
          "tablesAbove20Percent": {
            "type": "integer",
            "description": "Количество таблиц с процентом мертвых строк более 20%",
            "format": "int32"
          },
          "tablesAbove30Percent": {
            "type": "integer",
            "description": "Количество таблиц с процентом мертвых строк более 30%",
            "format": "int32"
          },
          "avgChangeRatePercent": {
            "type": "number",
            "description": "Средний процент изменения данных в таблицах (скорость накопления мертвых строк)",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Сводка метрик автовакуума для мониторинга состояния базы данных"
      },
      "AutovacuumRecommendation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип рекомендации (\"vacuum\", \"analyze\", \"parameter_tuning\", \"maintenance\")",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "Уровень серьезности проблемы (\"critical\", \"warning\", \"info\")",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Текстовое описание рекомендации или проблемы",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "description": "Имя таблицы, к которой относится рекомендация",
            "nullable": true
          },
          "parameter": {
            "type": "string",
            "description": "Наименование параметра PostgreSQL, который требует настройки",
            "nullable": true
          },
          "currentValue": {
            "type": "string",
            "description": "Текущее значение параметра",
            "nullable": true
          },
          "recommendedValue": {
            "type": "string",
            "description": "Рекомендуемое значение параметра",
            "nullable": true
          },
          "sqlCommand": {
            "type": "string",
            "description": "SQL-команда для применения рекомендации",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Рекомендация по настройке автовакуума для оптимизации работы базы данных"
      },
      "AutovacuumStat": {
        "required": [
          "createAt",
          "schemaName",
          "tableName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createAt": {
            "type": "string",
            "description": "Дата и время сбора статистики\nИспользуется для построения временных рядов и анализа тенденций",
            "format": "date-time"
          },
          "schemaName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Имя схемы базы данных\nСхема представляет собой пространство имен для организации таблиц"
          },
          "tableName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Имя таблицы в схеме\nТаблица содержит фактические данные и является основной единицей хранения"
          },
          "liveTuples": {
            "type": "integer",
            "description": "Количество \"живых\" tuple'ов (строк) в таблице\nАктуальные данные, доступные для операций SELECT, UPDATE, DELETE",
            "format": "int64"
          },
          "deadTuples": {
            "type": "integer",
            "description": "Количество \"мертвых\" tuple'ов (строк) в таблице\nУдаленные или обновленные строки, которые должны быть очищены автовакуумом\nВысокое значение указывает на необходимость vacuum обработки",
            "format": "int64"
          },
          "deadTupleRatio": {
            "type": "number",
            "description": "Процентное соотношение мертвых tuple'ов к общему количеству\nРассчитывается как: DeadTuples / (LiveTuples + DeadTuples) * 100%\nКритическое значение: обычно выше 20-30% требует внимания",
            "format": "double"
          },
          "tableSize": {
            "type": "integer",
            "description": "Общий размер таблицы в байтах\nВключает данные, индексы и служебную информацию\nПолезно для мониторинга роста таблиц и планирования ресурсов",
            "format": "int64"
          },
          "lastVacuum": {
            "type": "string",
            "description": "Дата и время последнего ручного VACUUM\nРучная очистка обычно выполняется администратором для конкретных таблиц",
            "format": "date-time",
            "nullable": true
          },
          "lastAutoVacuum": {
            "type": "string",
            "description": "Дата и время последнего автоматического VACUUM\nАвтовакуум запускается PostgreSQL автоматически по расписанию\nNULL означает, что автовакуум никогда не выполнялся для этой таблицы",
            "format": "date-time",
            "nullable": true
          },
          "changeRatePercent": {
            "type": "number",
            "description": "Процент изменения размера таблицы за период\nПоказывает скорость роста/уменьшения таблицы\nПоложительные значения - рост, отрицательные - уменьшение\nИспользуется для прогнозирования места на диске",
            "format": "double"
          },
          "dbConnectionId": {
            "type": "string",
            "description": "Идентификатор подключения к базе данных\nСвязывает статистику с конкретным подключением в системе мониторинга\nПозволяет различать данные от разных серверов/баз данных",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Статистика автовакуума PostgreSQL\nСодержит метрики для мониторинга и анализа процесса автоматической очистки базы данных\nАвтовакуум удаляет \"мертвые\" tuple'ы и обновляет статистику для оптимизатора запросов"
      },
      "BufferStats": {
        "type": "object",
        "properties": {
          "sharedHit": {
            "type": "integer",
            "description": "Shared buffer hits.",
            "format": "int64"
          },
          "sharedRead": {
            "type": "integer",
            "description": "Shared buffer reads (from disk).",
            "format": "int64"
          },
          "localHit": {
            "type": "integer",
            "description": "Local buffer hits.",
            "format": "int64"
          },
          "localRead": {
            "type": "integer",
            "description": "Local buffer reads.",
            "format": "int64"
          },
          "tempRead": {
            "type": "integer",
            "description": "Temp blocks read (from temp files).",
            "format": "int64"
          },
          "tempWritten": {
            "type": "integer",
            "description": "Temp blocks written (to temp files).",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": "Метрики буферов, агрегированные для узла."
      },
      "CacheAnalysisResponse": {
        "type": "object",
        "properties": {
          "analysisPeriodStart": {
            "type": "string",
            "description": "Начальная дата и время периода анализа",
            "format": "date-time"
          },
          "analysisPeriodEnd": {
            "type": "string",
            "description": "Конечная дата и время периода анализа",
            "format": "date-time"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CacheRecommendation"
            },
            "description": "Список рекомендаций по оптимизации кэша",
            "nullable": true
          },
          "metricsSummary": {
            "$ref": "#/components/schemas/CacheMetricsSummary"
          },
          "overallStatus": {
            "type": "string",
            "description": "Общий статус здоровья кэша\n\"healthy\" - кэш работает эффективно,\n\"warning\" - требуются некоторые оптимизации,\n\"critical\" - серьезные проблемы с кэшем",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Модель ответа для анализа кэша базы данных\nСодержит результаты анализа эффективности работы кэша PostgreSQL за определенный период"
      },
      "CacheHitStats": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "blksHit": {
            "type": "integer",
            "description": "Количество блоков, прочитанных из кэша (буферного кэша PostgreSQL)\nБлоки, которые были найдены в shared_buffers без необходимости дискового I/O\nВысокое значение указывает на хорошую производительность кэширования",
            "format": "int64"
          },
          "blksRead": {
            "type": "integer",
            "description": "Количество блоков, прочитанных с диска\nБлоки, которые не были найдены в кэше и потребовали физического чтения с диска\nВысокое значение может указывать на нехватку оперативной памяти или неэффективные запросы",
            "format": "int64"
          },
          "cacheHitRatio": {
            "type": "number",
            "description": "Коэффициент попадания в кэш (Cache Hit Ratio)\nРассчитывается как: BlksHit / (BlksHit + BlksRead) * 100%\nПоказывает процент запросов, которые были обслужены из кэша\nОптимальное значение: выше 99% для production-систем\nЗначение ниже 90% может указывать на проблемы с производительностью",
            "format": "double"
          },
          "createAt": {
            "type": "string",
            "description": "Дата и время сбора статистики\nПозволяет отслеживать изменения эффективности кэширования во времени",
            "format": "date-time"
          },
          "dbConnectionId": {
            "type": "string",
            "description": "Идентификатор подключения к базе данных\nСвязывает статистику с конкретным подключением/базой данных в системе мониторинга",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Статистика попаданий в кэш PostgreSQL\nОтслеживает эффективность использования кэша базы данных"
      },
      "CacheMetricsSummary": {
        "type": "object",
        "properties": {
          "totalBlksHit": {
            "type": "integer",
            "description": "Общее количество блоков, найденных в кэше (cache hits)",
            "format": "int64"
          },
          "totalBlksRead": {
            "type": "integer",
            "description": "Общее количество блоков, прочитанных с диска (cache misses)",
            "format": "int64"
          },
          "totalBlksAccessed": {
            "type": "integer",
            "description": "Общее количество обращений к блокам (hits + reads)",
            "format": "int64",
            "readOnly": true
          },
          "avgCacheHitRatio": {
            "type": "number",
            "description": "Средний процент попаданий в кэш за период анализа\nРассчитывается как: (TotalBlksHit / TotalBlksAccessed) * 100",
            "format": "double"
          },
          "minCacheHitRatio": {
            "type": "number",
            "description": "Минимальный процент попаданий в кэш за период анализа",
            "format": "double"
          },
          "maxCacheHitRatio": {
            "type": "number",
            "description": "Максимальный процент попаданий в кэш за период анализа",
            "format": "double"
          },
          "blksReadPerMinute": {
            "type": "number",
            "description": "Количество чтений блоков с диска в минуту",
            "format": "double"
          },
          "blksHitPerMinute": {
            "type": "number",
            "description": "Количество попаданий в кэш в минуту",
            "format": "double"
          },
          "blksAccessedPerMinute": {
            "type": "number",
            "description": "Общее количество обращений к блокам в минуту",
            "format": "double",
            "readOnly": true
          },
          "readToHitRatio": {
            "type": "number",
            "description": "Соотношение чтений с диска к попаданиям в кэш\nБолее высокие значения указывают на неэффективность кэша",
            "format": "double",
            "readOnly": true
          },
          "dataPointsCount": {
            "type": "integer",
            "description": "Количество точек данных, использованных для анализа",
            "format": "int32"
          },
          "analysisDuration": {
            "type": "string",
            "description": "Продолжительность периода анализа",
            "format": "date-span"
          }
        },
        "additionalProperties": false,
        "description": "Метрики специфичные для анализа эффективности кэша"
      },
      "CacheRecommendation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип рекомендации по оптимизации кэша\n\"shared_buffers\" - настройка размера shared_buffers,\n\"index_optimization\" - оптимизация индексов,\n\"query_tuning\" - настройка запросов,\n\"work_mem\" - настройка work_mem,\n\"effective_cache_size\" - настройка effective_cache_size",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "Уровень серьезности рекомендации\n\"low\" - низкий приоритет,\n\"medium\" - средний приоритет,\n\"high\" - высокий приоритет",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Детальное описание рекомендации и обоснование",
            "nullable": true
          },
          "currentValue": {
            "type": "number",
            "description": "Текущее значение параметра (если применимо)",
            "format": "double"
          },
          "recommendedValue": {
            "type": "number",
            "description": "Рекомендуемое значение параметра",
            "format": "double"
          },
          "threshold": {
            "type": "number",
            "description": "Пороговое значение для срабатывания рекомендации",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Рекомендации специфичные для оптимизации кэша базы данных"
      },
      "DbConnectionCheckDto": {
        "required": [
          "isValid"
        ],
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean",
            "description": "Доступна ли БД"
          },
          "errorMessage": {
            "type": "string",
            "description": "Сообщение об ошибке (если есть)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ответ на проверку доступа к БД"
      },
      "DbConnectionCreateDto": {
        "required": [
          "database",
          "host",
          "name",
          "password",
          "port",
          "username"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Название БД (внутри сервиса)",
            "nullable": true
          },
          "host": {
            "type": "string",
            "description": "Хост БД",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "description": "Порт БД",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Название БД",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Пользователь под которым логинимся в БД",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Пароль для пользователя в БД",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Дто для создания сущности соединения с БД, а также проверки на доступность"
      },
      "DbConnectionDto": {
        "required": [
          "database",
          "host",
          "id",
          "name",
          "port",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Название БД (внутри сервиса)",
            "nullable": true
          },
          "host": {
            "type": "string",
            "description": "Хост БД",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "description": "Порт БД",
            "format": "int32"
          },
          "database": {
            "type": "string",
            "description": "Название БД",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Пользователь под которым логинимся в БД",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "DbConnectionUpdateDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Название БД (внутри сервиса)",
            "nullable": true
          },
          "host": {
            "type": "string",
            "description": "Хост БД",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "description": "Порт БД",
            "format": "int32",
            "nullable": true
          },
          "database": {
            "type": "string",
            "description": "Название БД",
            "nullable": true
          },
          "username": {
            "type": "string",
            "description": "Пользователь под которым логинимся в БД",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Пароль для пользователя в БД",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Дто для обновления сущности соединения с БД"
      },
      "ExplainAnalysisResult": {
        "type": "object",
        "properties": {
          "findings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanFinding"
            },
            "nullable": true
          },
          "analyzedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Описание результата разбора EXPLAIN (FORMAT JSON)."
      },
      "ExplainRootPlan": {
        "type": "object",
        "properties": {
          "commandType": {
            "type": "string",
            "description": "Команда: SELECT/UPDATE/INSERT/DELETE и т.д., если доступно.",
            "nullable": true
          },
          "rootNode": {
            "$ref": "#/components/schemas/PlanNode"
          },
          "planningTimeMs": {
            "type": "number",
            "description": "Время планирования в миллисекундах (если предоставлено).",
            "format": "double",
            "nullable": true
          },
          "executionTimeMs": {
            "type": "number",
            "description": "Время выполнения в миллисекундах (если предоставлено).",
            "format": "double",
            "nullable": true
          },
          "settings": {
            "type": "object",
            "additionalProperties": {},
            "description": "Дополнительные настройки/параметры из EXPLAIN.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Корневой план EXPLAIN, содержит метрики времени и общий узел плана."
      },
      "GuidSimpleDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "IndexAnalysisResult": {
        "type": "object",
        "properties": {
          "periodStart": {
            "type": "string",
            "format": "date-time"
          },
          "periodEnd": {
            "type": "string",
            "format": "date-time"
          },
          "unusedIndexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexRecommendation"
            },
            "nullable": true
          },
          "inefficientIndexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexRecommendation"
            },
            "nullable": true
          },
          "growingIndexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexRecommendation"
            },
            "nullable": true
          },
          "mostUsedIndexes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndexUsage"
            },
            "nullable": true
          },
          "indexUsageStatistics": {
            "$ref": "#/components/schemas/IndexUsageStatistics"
          }
        },
        "additionalProperties": false
      },
      "IndexMetric": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "schemaName": {
            "type": "string",
            "description": "Имя схемы базы данных\nСхема содержит namespace для организации таблиц и индексов",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "description": "Имя таблицы, к которой относится индекс\nТаблица является целевым объектом для индексирования",
            "nullable": true
          },
          "indexName": {
            "type": "string",
            "description": "Имя индекса в базе данных\nУникальный идентификатор индекса в пределах схемы",
            "nullable": true
          },
          "indexScans": {
            "type": "integer",
            "description": "Количество сканирований индекса\nПоказывает, сколько раз индекс был использован для выполнения запросов\nНизкое значение может указывать на неиспользуемый индекс",
            "format": "int64"
          },
          "indexSize": {
            "type": "integer",
            "description": "Размер индекса в байтах\nВключает все страницы индекса, занимаемые на диске\nБольшие индексы требуют больше ресурсов для обслуживания",
            "format": "int64"
          },
          "tuplesRead": {
            "type": "integer",
            "description": "Количество tuple'ов (строк), прочитанных из индекса\nПоказывает объем данных, обработанных через индекс",
            "format": "int64"
          },
          "tuplesFetched": {
            "type": "integer",
            "description": "Количество tuple'ов (строк), фактически возвращенных индексом\nМожет отличаться от TuplesRead из-за фильтрации и условий",
            "format": "int64"
          },
          "efficiency": {
            "type": "number",
            "format": "double"
          },
          "createAt": {
            "type": "string",
            "description": "Дата и время сбора метрик индекса\nПозволяет отслеживать изменения в использовании индексов во времени",
            "format": "date-time"
          },
          "dbConnectionId": {
            "type": "string",
            "description": "Идентификатор подключения к базе данных\nСвязывает метрики с конкретным экземпляром БД в системе мониторинга",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Метрики эффективности индексов PostgreSQL\nСодержит статистику использования и производительности индексов для оптимизации запросов"
      },
      "IndexRecommendation": {
        "type": "object",
        "properties": {
          "schemaName": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "indexName": {
            "type": "string",
            "nullable": true
          },
          "metricType": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "nullable": true
          },
          "averageValue": {
            "type": "number",
            "format": "double"
          },
          "maxSize": {
            "type": "integer",
            "format": "int64"
          },
          "recommendation": {
            "type": "string",
            "nullable": true
          },
          "formattedSize": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IndexUsage": {
        "type": "object",
        "properties": {
          "schemaName": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "indexName": {
            "type": "string",
            "nullable": true
          },
          "averageScans": {
            "type": "integer",
            "format": "int64"
          },
          "totalScans": {
            "type": "integer",
            "format": "int64"
          },
          "averageEfficiency": {
            "type": "number",
            "format": "double"
          },
          "recommendation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "IndexUsageStatistics": {
        "type": "object",
        "properties": {
          "totalIndexes": {
            "type": "integer",
            "description": "Общее количество уникальных индексов в анализируемом наборе",
            "format": "int32"
          },
          "totalScans": {
            "type": "integer",
            "description": "Общее количество сканирований индексов за период",
            "format": "int64"
          },
          "averageEfficiency": {
            "type": "number",
            "description": "Средняя эффективность индексов в процентах",
            "format": "double"
          },
          "indexesByEfficiency": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Количество индексов по уровням эффективности",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LlmAnswer": {
        "required": [
          "newQuery",
          "newQueryAbout",
          "problems",
          "recommendations"
        ],
        "type": "object",
        "properties": {
          "problems": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LlmAnswerPoint"
            },
            "nullable": true
          },
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LlmAnswerPoint"
            },
            "nullable": true
          },
          "newQuery": {
            "type": "string",
            "nullable": true
          },
          "newQueryAbout": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LlmAnswerPoint": {
        "required": [
          "message",
          "severity"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Уровень серьёзности найденной проблемы или рекомендации.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LockAnalysisResult": {
        "type": "object",
        "properties": {
          "analysisTime": {
            "type": "string",
            "description": "Время проведения анализа",
            "format": "date-time"
          },
          "totalBlockedLocks": {
            "type": "integer",
            "description": "Общее количество заблокированных lock'ов",
            "format": "int32"
          },
          "blockedProcesses": {
            "type": "integer",
            "description": "Количество уникальных заблокированных процессов",
            "format": "int32"
          },
          "criticalIssues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Критические блокировки (требуют немедленного вмешательства)",
            "nullable": true
          },
          "warningIssues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Проблемные блокировки (требуют внимания)",
            "nullable": true
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Рекомендации по устранению",
            "nullable": true
          },
          "topBlockingPids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Наиболее проблемные PID процессов",
            "nullable": true
          },
          "topBlockedTables": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Наиболее блокируемые таблицы",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Результат анализа блокировок с рекомендациями"
      },
      "PgLock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "createAt": {
            "type": "string",
            "description": "Время сбора метрики",
            "format": "date-time"
          },
          "lockType": {
            "type": "string",
            "description": "Тип блокировки (relation, tuple, transactionid, etc.)",
            "nullable": true
          },
          "databaseOid": {
            "type": "integer",
            "description": "OID базы данных, к которой относится блокировка",
            "format": "int32"
          },
          "relationOid": {
            "type": "integer",
            "description": "OID отношения (таблицы), к которой относится блокировка",
            "format": "int32",
            "nullable": true
          },
          "page": {
            "type": "integer",
            "description": "Номер страницы в отношении (для tuple locks)",
            "format": "int32",
            "nullable": true
          },
          "tuple": {
            "type": "integer",
            "description": "Номер tuple в странице (для tuple locks)",
            "format": "int32",
            "nullable": true
          },
          "virtualXid": {
            "type": "string",
            "description": "Виртуальный ID транзакции",
            "nullable": true
          },
          "transactionId": {
            "type": "integer",
            "description": "ID транзакции",
            "format": "int32",
            "nullable": true
          },
          "classId": {
            "type": "integer",
            "description": "OID системного класса",
            "format": "int32",
            "nullable": true
          },
          "objectId": {
            "type": "integer",
            "description": "OID объекта внутри класса",
            "format": "int32",
            "nullable": true
          },
          "objectSubId": {
            "type": "integer",
            "description": "Номер под-object'а",
            "format": "int32",
            "nullable": true
          },
          "virtualTransaction": {
            "type": "string",
            "description": "Виртуальная транзакция backend'а",
            "nullable": true
          },
          "pid": {
            "type": "integer",
            "description": "Process ID backend'а, удерживающего блокировку",
            "format": "int32"
          },
          "granted": {
            "type": "boolean",
            "description": "Флаг, указывающий получена ли блокировка"
          },
          "mode": {
            "type": "string",
            "description": "Режим блокировки (ShareLock, ExclusiveLock, etc.)",
            "nullable": true
          },
          "fastPath": {
            "type": "boolean",
            "description": "Флаг быстрого пути блокировки"
          },
          "query": {
            "type": "string",
            "description": "Текущий запрос backend'а",
            "nullable": true
          },
          "applicationName": {
            "type": "string",
            "description": "Имя приложения, выполняющего запрос",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "Имя пользователя, выполняющего запрос",
            "nullable": true
          },
          "queryStart": {
            "type": "string",
            "description": "Время начала выполнения запроса",
            "format": "date-time",
            "nullable": true
          },
          "state": {
            "type": "string",
            "description": "Состояние backend'а (active, idle, etc.)",
            "nullable": true
          },
          "waitTimeMs": {
            "type": "integer",
            "description": "Время ожидания блокировки (в миллисекундах)",
            "format": "int64",
            "nullable": true
          },
          "dbConnectionId": {
            "type": "string",
            "description": "Идентификатор подключения",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Модель для хранения информации о заблокированных lock'ах PostgreSQL"
      },
      "PlanComparisonDto": {
        "type": "object",
        "properties": {
          "cost": {
            "$ref": "#/components/schemas/PlanPointComparsionResult"
          },
          "rows": {
            "$ref": "#/components/schemas/PlanPointComparsionResult"
          },
          "width": {
            "$ref": "#/components/schemas/PlanPointComparsionResult"
          },
          "seqScanCount": {
            "$ref": "#/components/schemas/PlanPointComparsionResult"
          },
          "nodeCount": {
            "$ref": "#/components/schemas/PlanPointComparsionResult"
          },
          "oldJoinTypes": {
            "type": "string",
            "nullable": true
          },
          "newJoinTypes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlanFinding": {
        "type": "object",
        "properties": {
          "code": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42
            ],
            "type": "integer",
            "description": "Типы проблем, выявляемых при анализе плана выполнения (EXPLAIN JSON)",
            "format": "int32"
          },
          "severity": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Уровень серьёзности найденной проблемы или рекомендации.",
            "format": "int32"
          },
          "problem": {
            "type": "string",
            "nullable": true
          },
          "recommendation": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Описание одного найденного \"находки\" (issue) по плану."
      },
      "PlanNode": {
        "type": "object",
        "properties": {
          "nodeType": {
            "type": "string",
            "description": "Node Type, как указан в JSON (например, \"Seq Scan\", \"Hash Join\").",
            "nullable": true
          },
          "shortNodeType": {
            "type": "string",
            "description": "Маппинг NodeType на enum, если возможно.",
            "nullable": true
          },
          "startupCost": {
            "type": "number",
            "description": "Оценочная startup cost.",
            "format": "double",
            "nullable": true
          },
          "totalCost": {
            "type": "number",
            "description": "Оценочная total cost.",
            "format": "double",
            "nullable": true
          },
          "planRows": {
            "type": "number",
            "description": "Оценка планировщика: планируемое количество строк.",
            "format": "double",
            "nullable": true
          },
          "planWidth": {
            "type": "number",
            "description": "Оценочная ширина строки (в байтах).",
            "format": "double",
            "nullable": true
          },
          "actualStartupTimeMs": {
            "type": "number",
            "description": "Фактическое стартовое время в миллисекундах (ANALYZE).",
            "format": "double",
            "nullable": true
          },
          "actualTotalTimeMs": {
            "type": "number",
            "description": "Фактическое суммарное время в миллисекундах (ANALYZE).",
            "format": "double",
            "nullable": true
          },
          "actualRows": {
            "type": "number",
            "description": "Фактическое количество строк (single loop).",
            "format": "double",
            "nullable": true
          },
          "actualLoops": {
            "type": "integer",
            "description": "Количество выполнений узла (loops).",
            "format": "int32",
            "nullable": true
          },
          "buffers": {
            "$ref": "#/components/schemas/BufferStats"
          },
          "nodeSpecific": {
            "type": "object",
            "additionalProperties": {},
            "description": "Словарь с произвольными свойствами узла (Index Name, Index Cond, Sort Method, Batches, Disk Usage и т.д.).",
            "nullable": true
          },
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanNode"
            },
            "description": "Дочерние узлы плана.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Узел плана EXPLAIN. NodeSpecific содержит все детальные поля, которые не попали в стандартные свойства."
      },
      "PlanPointComparsionResult": {
        "type": "object",
        "properties": {
          "old": {
            "type": "number",
            "format": "double"
          },
          "new": {
            "type": "number",
            "format": "double"
          },
          "differencePercent": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblematicTable": {
        "type": "object",
        "properties": {
          "schemaName": {
            "type": "string",
            "description": "Наименование схемы базы данных, в которой находится таблица",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "description": "Наименование проблемной таблицы",
            "nullable": true
          },
          "tableSize": {
            "type": "integer",
            "description": "Размер таблицы в байтах",
            "format": "int64"
          },
          "liveTuples": {
            "type": "integer",
            "description": "Количество живых (актуальных) строк в таблице",
            "format": "int64"
          },
          "deadTuples": {
            "type": "integer",
            "description": "Количество мертвых строк (удаленных или устаревших версий) в таблице",
            "format": "int64"
          },
          "deadTupleRatio": {
            "type": "number",
            "description": "Процентное соотношение мертвых строк к общему количеству строк\nРассчитывается как: (DeadTuples / (LiveTuples + DeadTuples)) * 100",
            "format": "double"
          },
          "changeRatePercent": {
            "type": "number",
            "description": "Процент роста мертвых строк в час\nПоказывает скорость накопления мертвых данных",
            "format": "double"
          },
          "lastAutoVacuum": {
            "type": "string",
            "description": "Время последнего запуска автовакуума для данной таблицы",
            "format": "date-time"
          },
          "priority": {
            "type": "string",
            "description": "Приоритет обработки таблицы (\"high\", \"medium\", \"low\")\nОпределяется на основе DeadTupleRatio и ChangeRatePercent",
            "nullable": true
          },
          "growthTrend": {
            "type": "string",
            "description": "Тенденция роста мертвых строк (\"rapid\" - быстрый, \"moderate\" - умеренный, \"slow\" - медленный)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Информация о проблемной таблице, требующей внимания автовакуума"
      },
      "QueryAnalysisResultDto": {
        "required": [
          "dbConnectionId",
          "explainResult",
          "id",
          "query"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id запроса",
            "format": "uuid"
          },
          "dbConnectionId": {
            "type": "string",
            "description": "Id подключения к БД",
            "format": "uuid"
          },
          "query": {
            "type": "string",
            "description": "Содержимое SQL запроса",
            "nullable": true
          },
          "explainResult": {
            "$ref": "#/components/schemas/ExplainRootPlan"
          },
          "algorithmRecommendation": {
            "$ref": "#/components/schemas/SqlAlgorithmAnalysisResult"
          },
          "llmRecommendations": {
            "$ref": "#/components/schemas/SqlLlmAnalysisResult"
          },
          "explainComparisonDto": {
            "$ref": "#/components/schemas/PlanComparisonDto"
          }
        },
        "additionalProperties": false,
        "description": "Результат анализа SQL запроса"
      },
      "QueryCreateDto": {
        "required": [
          "dbConnectionId",
          "sql"
        ],
        "type": "object",
        "properties": {
          "dbConnectionId": {
            "type": "string",
            "description": "Id подключения к БД в которой будет выполняться запрос",
            "format": "uuid"
          },
          "sql": {
            "type": "string",
            "description": "Содержимое запроса",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Дто для создания SQL запроса"
      },
      "QueryDto": {
        "required": [
          "createdAt",
          "dbConnectionId",
          "explainResult",
          "id",
          "sql"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id запроса",
            "format": "uuid"
          },
          "sql": {
            "type": "string",
            "description": "Содержимое SQL запроса",
            "nullable": true
          },
          "explainResult": {
            "$ref": "#/components/schemas/ExplainRootPlan"
          },
          "dbConnectionId": {
            "type": "string",
            "description": "Id подключения к БД в которой выполнялся запрос",
            "format": "uuid"
          },
          "createdAt": {
            "type": "string",
            "description": "Дата и время создания",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Дто запроса"
      },
      "QueryStatAdvanced": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "nullable": true
          },
          "calls": {
            "type": "integer",
            "format": "int64"
          },
          "totalTimeMs": {
            "type": "number",
            "format": "double"
          },
          "meanTimeMs": {
            "type": "number",
            "format": "double"
          },
          "rows": {
            "type": "integer",
            "format": "int64"
          },
          "sharedBlksRead": {
            "type": "integer",
            "format": "int64"
          },
          "tempBlksWritten": {
            "type": "integer",
            "format": "int64"
          },
          "score": {
            "type": "number",
            "format": "double"
          },
          "severity": {
            "enum": [
              0,
              1,
              2,
              3,
              4
            ],
            "type": "integer",
            "format": "int32"
          },
          "suggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Suggestion"
            },
            "nullable": true
          },
          "explainPlanJson": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SchemaTableDto": {
        "type": "object",
        "properties": {
          "schemaName": {
            "type": "string",
            "description": "Название схемы",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "description": "Название таблицы",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Связь схема - таблица"
      },
      "SqlAlgorithmAnalysisResult": {
        "type": "object",
        "properties": {
          "queryAnalysisResult": {
            "$ref": "#/components/schemas/StaticAnalysisResult"
          },
          "explainAnalysisResult": {
            "$ref": "#/components/schemas/ExplainAnalysisResult"
          }
        },
        "additionalProperties": false
      },
      "SqlAnalyzeRuleCreateDto": {
        "required": [
          "name",
          "problem",
          "recommendation",
          "regex",
          "severity"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Уровень серьёзности найденной проблемы или рекомендации.",
            "format": "int32"
          },
          "problem": {
            "type": "string",
            "nullable": true
          },
          "recommendation": {
            "type": "string",
            "nullable": true
          },
          "regex": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SqlAnalyzeRuleDto": {
        "required": [
          "createdAt",
          "id",
          "isActive",
          "name",
          "problem",
          "recommendation",
          "regex",
          "severity"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Уровень серьёзности найденной проблемы или рекомендации.",
            "format": "int32"
          },
          "problem": {
            "type": "string",
            "nullable": true
          },
          "recommendation": {
            "type": "string",
            "nullable": true
          },
          "regex": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SqlAnalyzeRuleUpdateDto": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "severity": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "problem": {
            "type": "string",
            "nullable": true
          },
          "recommendation": {
            "type": "string",
            "nullable": true
          },
          "regex": {
            "type": "string",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SqlLlmAnalysisResult": {
        "type": "object",
        "properties": {
          "llmAnswer": {
            "$ref": "#/components/schemas/LlmAnswer"
          },
          "explainResult": {
            "$ref": "#/components/schemas/ExplainRootPlan"
          }
        },
        "additionalProperties": false
      },
      "StaticAnalysisPoint": {
        "type": "object",
        "properties": {
          "ruleType": {
            "enum": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23,
              24,
              25,
              26,
              27,
              28,
              29,
              30,
              31,
              32,
              33,
              34,
              35,
              36,
              37,
              38,
              39,
              40,
              41,
              42,
              43,
              44
            ],
            "type": "integer",
            "description": "Коды статических правил анализа SQL.",
            "format": "int32"
          },
          "severity": {
            "enum": [
              0,
              1,
              2
            ],
            "type": "integer",
            "description": "Уровень серьёзности найденной проблемы или рекомендации.",
            "format": "int32"
          },
          "problem": {
            "type": "string",
            "nullable": true
          },
          "recommendations": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Результат одного статического правила."
      },
      "StaticAnalysisResult": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "nullable": true
          },
          "findings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StaticAnalysisPoint"
            },
            "nullable": true
          },
          "analyzedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Итоговый результат статического анализа."
      },
      "SubstituteValuesToSqlRequestDto": {
        "type": "object",
        "properties": {
          "dbConnectionId": {
            "type": "string",
            "format": "uuid"
          },
          "sql": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Suggestion": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "exampleSql": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TempFilesMetricsSummary": {
        "type": "object",
        "properties": {
          "totalTempFiles": {
            "type": "integer",
            "description": "Общее количество созданных временных файлов за период анализа\nВысокое значение может указывать на нехватку work_mem",
            "format": "int64"
          },
          "totalTempBytes": {
            "type": "integer",
            "description": "Общий объем данных в байтах, записанных во временные файлы\nБольшой объем указывает на интенсивное использование диска для временных операций",
            "format": "int64"
          },
          "tempFilesPerMinute": {
            "type": "number",
            "description": "Среднее количество временных файлов, создаваемых в минуту\nПоказывает интенсивность создания временных файлов",
            "format": "double"
          },
          "tempBytesPerMinute": {
            "type": "number",
            "description": "Средний объем данных в байтах, записываемых во временные файлы в минуту\nПоказывает интенсивность использования диска для временных операций",
            "format": "double"
          },
          "tempBytesPerSecond": {
            "type": "number",
            "description": "Средний объем данных в байтах, записываемых во временные файлы в секунду\nКлючевой показатель нагрузки на подсистему ввода-вывода",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Метрики специфичные для анализа временных файлов базы данных\nСодержит статистические данные о создании и использовании временных файлов"
      },
      "TempFilesRecommendation": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Тип рекомендации по оптимизации временных файлов\n\"work_mem\" - увеличение памяти для операций сортировки и хэширования,\n\"temp_buffers\" - настройка буферов для временных таблиц,\n\"query_optimization\" - оптимизация запросов, генерирующих временные файлы,\n\"maintenance_work_mem\" - увеличение памяти для операций обслуживания,\n\"temp_file_limit\" - установка лимита временных файлов",
            "nullable": true
          },
          "severity": {
            "type": "string",
            "description": "Уровень серьезности рекомендации\n\"low\" - низкий приоритет (незначительное влияние на производительность),\n\"medium\" - средний приоритет (заметное влияние на производительность),\n\"high\" - высокий приоритет (критическое влияние на производительность)",
            "nullable": true
          },
          "message": {
            "type": "string",
            "description": "Детальное описание рекомендации и обоснование\nСодержит объяснение проблемы, последствия и ожидаемый эффект от применения",
            "nullable": true
          },
          "currentValue": {
            "type": "number",
            "description": "Текущее значение параметра (если применимо)\nАктуальное значение настройки, которое требует оптимизации",
            "format": "double"
          },
          "threshold": {
            "type": "number",
            "description": "Пороговое значение для срабатывания рекомендации\nЗначение, при превышении которого рекомендация становится актуальной\nНапример: лимит временных файлов или объем используемой памяти",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": "Рекомендации по оптимизации работы с временными файлами базы данных\nПредставляет конкретные предложения по настройке параметров, влияющих на временные файлы"
      },
      "TempFilesRecommendationResponse": {
        "type": "object",
        "properties": {
          "analysisPeriodStart": {
            "type": "string",
            "description": "Начальная дата и время периода анализа\nОпределяет момент начала сбора метрик временных файлов",
            "format": "date-time"
          },
          "analysisPeriodEnd": {
            "type": "string",
            "description": "Конечная дата и время периода анализа\nОпределяет момент окончания сбора метрик временных файлов",
            "format": "date-time"
          },
          "recommendations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TempFilesRecommendation"
            },
            "description": "Список рекомендаций по оптимизации работы с временными файлами\nСодержит конкретные предложения по уменьшению использования временных файлов",
            "nullable": true
          },
          "metricsSummary": {
            "$ref": "#/components/schemas/TempFilesMetricsSummary"
          }
        },
        "additionalProperties": false,
        "description": "Модель ответа для анализа временных файлов базы данных\nСодержит результаты анализа использования временных файлов PostgreSQL за определенный период\nИспользуется для выявления проблем с производительностью, связанных с временными файлами"
      },
      "TempFilesStatsDal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "tempFiles": {
            "type": "integer",
            "description": "Количество созданных временных файлов\nВременные файлы создаются когда операция не помещается в оперативной памяти (work_mem)\nВысокое значение может указывать на:\n- Недостаточный размер work_mem\n- Большие операции сортировки, хэширования или агрегации\n- Неоптимальные запросы, требующие временного хранения данных",
            "format": "int64"
          },
          "tempBytes": {
            "type": "integer",
            "description": "Общий объем данных во временных файлах (в байтах)\nПоказывает сколько данных было выгружено на диск из-за нехватки оперативной памяти\nБольшие значения могут значительно снижать производительность из-за дискового I/O\nРекомендуется мониторить этот показатель для выявления \"тяжелых\" запросов",
            "format": "int64"
          },
          "createAt": {
            "type": "string",
            "description": "Дата и время сбора статистики\nПозволяет отслеживать пиковые нагрузки и коррелировать с выполнением конкретных запросов",
            "format": "date-time"
          },
          "dbConnectionId": {
            "type": "string",
            "description": "Идентификатор подключения к базе данных\nСвязывает статистику временных файлов с конкретным экземпляром БД\nПолезно для кластерных окружений с несколькими базами данных",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "Статистика использования временных файлов PostgreSQL\nМониторинг временных файлов помогает выявить проблемы с производительностью и настройкой БД"
      }
    }
  },
  "tags": [
    {
      "name": "AutovacuumAnalysis",
      "description": "Контроллер для работы с метриками работы автовакуума"
    },
    {
      "name": "CacheAnalysis",
      "description": "контроллер для отслеживания состояния кеша"
    },
    {
      "name": "PgLockAnalysis",
      "description": "Контроллер для работы с метриками работы автовакуума"
    },
    {
      "name": "TempFilesAnalyzeMonitoring",
      "description": "контроллер для получения результатов анализа метрик бд"
    }
  ]
}